package list

import (
	"github.com/webdevcody/go-mailing-list/components"
	dataAccess "github.com/webdevcody/go-mailing-list/data-access"
	dashboardComponents "github.com/webdevcody/go-mailing-list/routes/dashboard/dashboard_components"
	"strconv"
)

templ emailListPanel(isLoggedIn bool, emails []dataAccess.Email) {
	@dashboardComponents.Layout(isLoggedIn, dashboardComponents.ListPanel) {
		<div class="space-y-12">
			<section class="space-y-4">
				<h1 class="text-2xl">Mailing List</h1>
				<form
					hx-post="/actions/add-email"
					hx-target="#emailList"
					hx-swap="beforeend"
					hx-on::after-request="this.reset()"
					class="flex flex-col gap-4"
					hx-indicator="find .htmx-indicator"
					hx-disabled-elt="find button"
				>
					<label htmlFor="emails">Emails (new line per email)</label>
					<textarea
						id="emails"
						required
						autofocus
						name="emails"
						class="textarea textarea-bordered"
						placeholder="test@example.com"
					></textarea>
					<div id="error"></div>
					<button
						id="add-email-btn"
						class="btn btn-primary"
						type="submit"
					>
						Add Email(s)
						@components.Indicator()
					</button>
				</form>
			</section>
			<section class="space-y-4">
				<h2 class="text-2xl">Current List ({ strconv.Itoa(len(emails)) })</h2>
				<ul
					id="emailList"
					class="flex flex-wrap gap-4"
				>
					@emailList(emails)
				</ul>
				if len(emails) == 0 {
					<p>You haven't added any emails.</p>
				}
			</section>
		</div>
	}
}

templ emailList(emails []dataAccess.Email) {
	for _, item := range emails {
		<li class="list-none p-4 flex items-center gap-2 bg-base-200 rounded">
			{ item.Email }
			<form
				hx-post="/actions/delete-email"
				hx-swap="delete"
				hx-target="closest li"
				class="flex items-center m-0"
				hx-disabled-elt={ "#delete-" + strconv.FormatInt(item.Id, 10) }
			>
				<button id={ "delete-" + strconv.FormatInt(item.Id, 10) } class="btn btn-xs btn-error">
					X
					@components.Indicator()
				</button>
				<input type="hidden" name="id" value={ strconv.FormatInt(item.Id, 10) }/>
			</form>
		</li>
	}
}

templ withInvalidEmails(sibling templ.Component) {
	<div id="error" hx-swap-oob="true">
		<div class="alert alert-warning">
			<div class="flex-1">
				<span class="font-bold">Invalid Email(s)</span>
				<p>One or more of the emails you entered were invalid and ignored.  The valid emails were added successfully.</p>
			</div>
			<button class="btn" onclick="this.parentElement.remove()">Close</button>
		</div>
	</div>
	@sibling
}
